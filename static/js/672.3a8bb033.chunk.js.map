{"version":3,"file":"static/js/672.3a8bb033.chunk.js","mappings":"wJACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCWhL,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,UAC7CL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAKO,SAAER,EAAMW,QAElC,ECHA,EAJgB,SAACX,GACb,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAOE,SAAER,EAAMY,SAC5C,E,uCCiEMC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,cAAlBD,EAnBL,SAACd,GACjB,IAAMgB,GAAeC,EAAAA,EAAAA,GAAiB,KACtC,OACId,EAAAA,EAAAA,KAAAe,EAAAA,SAAA,CAAAV,UAEIW,EAAAA,EAAAA,MAAA,QAAMC,SAAUpB,EAAMqB,aAAab,SAAA,EAC/BL,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,EAAUb,KAAM,eAAgBc,SAAU,CAACC,EAAAA,EAAeV,GAAeW,YAAY,0BAE3GxB,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,eAQ5B,IAGA,EA3DgB,SAACR,GAEb,IAAI4B,EAAkB5B,EAAM6B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI7B,EAAAA,EAAAA,KAAC8B,EAAU,CAACtB,KAAMqB,EAAErB,KAAMT,GAAI8B,EAAE9B,IAAM,IAC3FgC,EAAmBlC,EAAM6B,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAIjC,EAAAA,EAAAA,KAACkC,EAAO,CAACzB,QAASwB,EAAExB,SAAW,IAsB1F,OACIO,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAEyB,QAAQtB,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEiC,aAAa9B,SAC1BoB,KAELT,EAAAA,EAAAA,MAAA,OAAKf,UAAWC,EAAE8B,SAAS3B,SAAA,EACvBL,EAAAA,EAAAA,KAAA,OAAAK,SAAM0B,KACN/B,EAAAA,EAAAA,KAACU,EAAgB,CAACO,SAfb,SAACmB,GACdvC,EAAMwC,eAAeD,EAASE,aAElC,SAgBJ,E,8BClBA,GACIC,E,QAAAA,KACIC,EAAAA,EAAAA,KArBc,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,YAI3B,GAeiC,CACrBW,eAAAA,EAAAA,IAEJK,EAAAA,EALR,CAMMC,E","sources":["webpack://ff2/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__yiC6J\",\"dialogsItems\":\"Dialogs_dialogsItems__ksquq\",\"active\":\"Dialogs_active__r7Xtu\",\"messages\":\"Dialogs_messages__MPUUn\",\"message\":\"Dialogs_message__+SzFm\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { requiredField, maxlengthCreator } from '../../utils/VALIDATORS/validators'\r\nimport {Textarea} from \"../../components/Common/FormsControl/formsControl\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} />);\r\n    // let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n\r\n    // let onSendMessageClick = () => {\r\n    //     props.SendMessageClick();\r\n    // }\r\n\r\n    // let onNewMessageChange = (e) => {\r\n    //     let body = e.target.value;\r\n    //     props.NewMessageChange(body);\r\n    // }\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        props.addNewMassages(formData.textMessages)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <DialogsReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DialogsForm = (props) => {\r\n    const maxlength100 = maxlengthCreator(100)\r\n    return (\r\n        <>\r\n\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea} name={'textMessages'} validate={[requiredField, maxlength100]} placeholder='Enter your message' />\r\n                </div>\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n            </form>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\nconst DialogsReduxForm = reduxForm({ form: 'dialogForm' })(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {\r\n    // sendMessageCreator\r\n    // , updateNewMessageBodyCreator,\r\n    addNewMassages\r\n} from \"../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from \"redux\"\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n\r\n    }\r\n};\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         SendMessageClick: () => {\r\n//             dispatch(sendMessageCreator());\r\n//         },\r\n//         NewMessageChange: (e) => {\r\n//             dispatch(updateNewMessageBodyCreator(e));\r\n//         }\r\n//     }\r\n// };\r\n\r\n\r\nexport default\r\n    compose(\r\n        connect(mapStateToProps, {\r\n            addNewMassages\r\n        }),\r\n        withAuthRedirect\r\n    )(Dialogs);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n//     let SendMessageClick = () => {\r\n//         props.store.dispatch(sendMessageCreator());\r\n//     }\r\n\r\n//     let NewMessageChange = (e) => {\r\n//         props.store.dispatch(updateNewMessageBodyCreator(e));\r\n//     }\r\n\r\n//     return (<Dialogs state={props.store.getState().dialogsPage} SendMessageClick={SendMessageClick} NewMessageChange={NewMessageChange} />)\r\n// }\r\n"],"names":["props","path","id","_jsx","className","s","dialog","active","children","NavLink","to","name","message","DialogsReduxForm","reduxForm","form","maxlength100","maxlengthCreator","_Fragment","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","dialogsElements","dialogsPage","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","dialogsItems","formData","addNewMassages","textMessages","compose","connect","state","withAuthRedirect","Dialogs"],"sourceRoot":""}